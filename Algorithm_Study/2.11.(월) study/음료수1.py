'''
N x M 크기의 얼음 틀이 있다. 구멍이 뚫려 있는 부분은 0, 칸막이가 존재하는 부분은 1 로 표시된다. 
구멍이 뚫려 있는 부분끼리 상. 하. 좌, 우로 붙어 있는 경우 서로 연결되어 있는 것으로 간주한다. 
이때 얼음 틀의 모양이 주어졌을 때 생성되는 총 아이스크림의 개수를 구하는 프로그램을 작성하시오. 
다음의 4x5 얼음 틀 예시에서는 아이스크림이 총 3개 생성된다.

입력 조건 
• 첫 번째 줄에 얼음 틀의 세로 길이 N과 가로 길이 M이 주어진다. (1 <= N, M <= 1,000)
• 두 번째 줄부터 N 十 1 번째 줄까지 얼음 틀의 형태가 주어진다.
• 이때 구멍이 뚫려있는 부분은 0, 그렇지 않은 부분은 1 이다.

출력 조건 
• 한 번에 만들 수 있는 아이스크림의 개수를 출력한다
'''

# 함수 제작
def dfs(x, y):
    #######################물어볼 것!###########################
    # 주어진 범위를 벗어나는 경우 즉시 종료 << 이거 설정안하니까 자꾸 오류나는데 왜인지 이해가 안됨.
    # 이거 넣고 나니 답이 나오는데 왜 필요한지 왜 없으면 오류난건지 잘 모르겠음.
    if x < 0 or x >= N or y < 0 or y >= M:
        return False
    if arr[x][y] == 2 or arr[x][y] == 1:
        return False
    
    # 현재 위치 방문표시
    arr[x][y] = 2
    
    # 현재 위치 상하좌우 DFS 실행
    dfs(x, y+1)
    dfs(x+1, y)
    dfs(x, y-1)
    dfs(x-1, y)
    
    return True
    

# 얼음틀 크기 입력받기
N, M = map(int, input().split())

# 얼음틀 리스트 생성하기
arr = []
for i in range(N):
    arr.append(list(map(int, input())))

# 얼음ㅁ 숫자 세기
ice = 0
for i in range(N):
    for j in range(M):
        if dfs(i, j) == True:
            ice += 1

print(ice)


