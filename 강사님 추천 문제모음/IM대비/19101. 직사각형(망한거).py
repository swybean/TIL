'''
두 꼭짓점의 좌표를 나타내는 4개의 정수 x y p q 로 표현된다. 단 항상 x<p, y<q 이다

좌표값이 0이상 1000이하, 출력은 a, b, c, d 대신 1, 2, 3, 4
직사각형 = 1
선분 = 2
점 = 3
공통부분없음 = 4
'''
T = int(input())
for test_case in range(1, T+1):
    
    N = 1001 # 2차원 배열 틀에 쓸 범위
    result = 0

    # 2차원 배열 틀 만들기
    arr = [[0] * N for _ in range(N)]
    
    for _ in range(1):
        # 두 사각형의 꼭짓점 좌표값 입력받기
        x1, y1, x2, y2 = map(int, input().split())
        p1, q1, p2, q2 = map(int, input().split())

        # 첫번째 사각형 범위에 1씩 더하기
        for k in range(x1, x2+1):
            for l in range(y1, y2+1):
                arr[k][l] += 1
        # 두번째 사각형 범위에 1씩 더하기
        for p in range(p1, p2+1):
            for q in range(q1, q2+1):
                arr[p][q] += 1

        # 사각형 범위 내 1씩 더하는 과정이 끝난 후 4가지 조건에 부합하는지 확인 시작
        two_count = 0   # 2가 적힌 영역 개수
        counts = 0      # 하나 정한 2가 적힌 칸 주변에 있는 2가 적현 칸의 수
        
        for i in range(N):
            for j in range(N):
                if arr[i][j] == 2:  # 전체탐색 중 2가 적혀있으면 
                    two_count += 1  # 카운트에 +1 해라
            # 상하좌우 + 대각선 총 8방향 봐서 2가 3이상이면 직사각형, 3개 미만은 선분
            if arr[i][j] == 2:
                for di, dj in [[1, 0], [0, 1], [-1, 0], [0, -1], [1, 1], [1, -1], [-1, 1], [-1, -1]]:
                    ni = i + di
                    nj = j + dj
                    if 0 <= ni < N and 0 <= nj < N:
                        if arr[ni][nj] == 2:
                            counts += 1
            # 2칸 주위 8방향 안에 2칸이 3개 미만이면 선분이다.
            if counts < 3:
                result = 2
                break
            # 2칸 주위 8방향 안에 2칸이 3개 이상이면 직사각형이다.
            elif counts >= 3:
                result = 1
                break

        # 공통부분이 없는 경우
        if two_count == 0:
            result = 4
            break
                    
        # 꼭짓점에서 만나는 경우        
        if two_count == 1:          # 전체탐색 끝난 후 카운트가 1이면
            result = 3              # 2을 출력 (점인 경우)
            break
                
    print(f'#{test_case} {result}')
        



'''
1. 사각형 영역에 해당하는 영역에 1을 더한다.

    1-1. 점인 경우
    두 사각형의 꼭짓점 중 하나라도 좌표가 일치하면 점이다.
    전체탐색 중 2인 영역이 단 1개라면 점이다.

    if 전체에서 2가 적힌 영역의 개수가 1칸 이라면

    
    1-2. 직사각형 경우
    1씩 더하면서 사각형 영역을 구했으니 
    0, 1이 아닌 다른 숫자가 적힌 영역이 있으면 겹쳐져서 2가 된거니까 겹쳐서 직사각형이다.
    (점이랑 구분하기 위해 2인 영역이 2이상이어야 한다.)

    if 전체에서 2가 적힌 영역의 개수가 2칸 이상이라면

    
    1-3. 공통 부분이 없는 경우
    1로 이루어진 영역이 2개 이상이면 공통부분 없음
    전체 탐색 후 처음 만난 1을 기준으로 델타로 탐색하면서 1이 이어지면 탐색한다.
    델타 탐색하면서 찾은 1들이 이어져있는 영역을 0으로 만들고.
    전체탐색을 해서 1이 남아있으면 영역이 공통부분이 없는 경우다.

    if 전체에서 2가 적힌 영역이 없는 경우
        델타 순회로 1로 이어진 영역을 조회 0으로 바꾸고
            전체검색을 다시 해봤는데 1인 영역이 있으면 공통 없음

            전체검색을 다시 해봤는데 모든 영역이 0이면 선분
'''